package net.projectbeyond.melting_point.procedures;

import net.fabricmc.fabric.api.event.player.UseBlockCallback;
import net.minecraft.block.Blocks;
import net.minecraft.entity.Entity;
import net.minecraft.entity.LivingEntity;
import net.minecraft.entity.player.PlayerEntity;
import net.minecraft.item.HoeItem;
import net.minecraft.item.ItemStack;
import net.minecraft.sound.SoundCategory;
import net.minecraft.sound.SoundEvents;
import net.minecraft.util.ActionResult;
import net.minecraft.util.math.BlockPos;
import net.minecraft.util.math.random.Random;
import net.minecraft.world.World;
import net.projectbeyond.melting_point.block.ModBlocks;

public class SoulSoilTilling {
    public SoulSoilTilling() {
        UseBlockCallback.EVENT.register((player, level, hand, hitResult) -> {
            if (hand != player.getActiveHand())
                return ActionResult.PASS;
            tillSoulSoil(level, player.getBlockPos(), player);
            return ActionResult.PASS;
        });
    }

    public static void tillSoulSoil(World world, BlockPos pos, Entity entity) {
        if (entity == null)
            return;
        if ((entity instanceof LivingEntity livingEntity ? livingEntity.getMainHandStack() : ItemStack.EMPTY).getItem() instanceof HoeItem &&
                ( ((world.getBlockState(pos)).getBlock() == Blocks.SOUL_SAND) || ((world.getBlockState(pos)).getBlock() == Blocks.SOUL_SOIL) )
        ) {
            if ((world.getBlockState(pos)).getBlock() == Blocks.SOUL_SAND) {
                world.setBlockState(pos, Blocks.SOUL_SOIL.getDefaultState(), 3);
            } else if ((world.getBlockState(pos)).getBlock() == Blocks.SOUL_SOIL) {
                world.setBlockState(pos, ModBlocks.SOUL_HARVESTLAND.getDefaultState(), 3);
            }
            world.playSound(entity, pos, SoundEvents.ITEM_HOE_TILL, SoundCategory.BLOCKS, 1.0f, 1.0f);
            {
                ItemStack stack = (entity instanceof LivingEntity livingEntity ? livingEntity.getMainHandStack() : ItemStack.EMPTY);
                if (stack.damage(1, Random.create(), null)) {
                    stack.decrement(1);
                    stack.setDamage(0);
                }
            }
        }
    }

}
